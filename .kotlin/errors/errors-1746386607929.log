kotlin version: 2.1.20
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: C:/Users/nazar/AndroidStudioProjects/JustCook/components/src/main/java/com/example/components/JustButton.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:107)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:90)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:54)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:41)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:27)
	at org.jetbrains.kotlin.config.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.runCodegen$cli(KotlinToJVMBytecodeCompiler.kt:413)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:98)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:30)
	at org.jetbrains.kotlin.cli.pipeline.PipelinePhase.phaseBody(PipelinePhase.kt:68)
	at org.jetbrains.kotlin.cli.pipeline.PipelinePhase.phaseBody(PipelinePhase.kt:58)
	at org.jetbrains.kotlin.config.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:215)
	at org.jetbrains.kotlin.config.phaser.NamedCompilerPhase.invoke(CompilerPhase.kt:111)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:28)
	at org.jetbrains.kotlin.config.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.cli.pipeline.AbstractCliPipeline.runPhasedPipeline(AbstractCliPipeline.kt:106)
	at org.jetbrains.kotlin.cli.pipeline.AbstractCliPipeline.execute(AbstractCliPipeline.kt:65)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecutePhased(K2JVMCompiler.kt:61)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecutePhased(K2JVMCompiler.kt:36)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:80)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.kt:337)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:466)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:75)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:514)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:431)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:310)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:137)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:678)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1805)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:JustButton visibility:public modality:FINAL <> (onClick:kotlin.Function0<kotlin.Unit>, modifier:androidx.compose.ui.Modifier, enabled:kotlin.Boolean, interactionSource:androidx.compose.foundation.interaction.MutableInteractionSource, shape:androidx.compose.ui.graphics.Shape, border:androidx.compose.foundation.BorderStroke?, backgroundGradient:kotlin.collections.List<androidx.compose.ui.graphics.Color>, disabledBackgroundGradient:kotlin.collections.List<androidx.compose.ui.graphics.Color>, contentPadding:androidx.compose.foundation.layout.PaddingValues, content:@[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.RowScope, kotlin.Unit>) returnType:kotlin.Unit
  annotations:
    Composable
  VALUE_PARAMETER name:onClick index:0 type:kotlin.Function0<kotlin.Unit>
  VALUE_PARAMETER name:modifier index:1 type:androidx.compose.ui.Modifier
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.Modifier
  VALUE_PARAMETER name:enabled index:2 type:kotlin.Boolean
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Boolean
  VALUE_PARAMETER name:interactionSource index:3 type:androidx.compose.foundation.interaction.MutableInteractionSource
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.foundation.interaction.MutableInteractionSource
  VALUE_PARAMETER name:shape index:4 type:androidx.compose.ui.graphics.Shape
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.graphics.Shape
  VALUE_PARAMETER name:border index:5 type:androidx.compose.foundation.BorderStroke?
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.foundation.BorderStroke?
  VALUE_PARAMETER name:backgroundGradient index:6 type:kotlin.collections.List<androidx.compose.ui.graphics.Color>
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.collections.List<androidx.compose.ui.graphics.Color>
  VALUE_PARAMETER name:disabledBackgroundGradient index:7 type:kotlin.collections.List<androidx.compose.ui.graphics.Color>
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.collections.List<androidx.compose.ui.graphics.Color>
  VALUE_PARAMETER name:contentPadding index:8 type:androidx.compose.foundation.layout.PaddingValues
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.foundation.layout.PaddingValues
  VALUE_PARAMETER name:content index:9 type:@[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.RowScope, kotlin.Unit>
  BLOCK_BODY
    CALL 'public final fun Box$default (modifier: androidx.compose.ui.Modifier?, contentAlignment: androidx.compose.ui.Alignment?, propagateMinConstraints: kotlin.Boolean, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.BoxKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      modifier: BLOCK type=androidx.compose.ui.Modifier origin=ARGUMENTS_REORDERING_FOR_CALL
        VAR IR_TEMPORARY_VARIABLE name:tmp0_$receiver type:androidx.compose.ui.Modifier [val]
          CALL 'public open fun then (other: androidx.compose.ui.Modifier): androidx.compose.ui.Modifier [infix] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier origin=null
            $this: CALL 'public final fun background-bw27NRU (color: androidx.compose.ui.graphics.Color, shape: androidx.compose.ui.graphics.Shape): androidx.compose.ui.Modifier declared in androidx.compose.foundation.BackgroundKt' type=androidx.compose.ui.Modifier origin=null
              $receiver: CALL 'public final fun background$default (brush: androidx.compose.ui.graphics.Brush, shape: androidx.compose.ui.graphics.Shape?, alpha: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.BackgroundKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
                $receiver: CALL 'public final fun clip (shape: androidx.compose.ui.graphics.Shape): androidx.compose.ui.Modifier declared in androidx.compose.ui.draw.ClipKt' type=androidx.compose.ui.Modifier origin=null
                  $receiver: CALL 'public final fun shadow-s4CzXII$default (elevation: androidx.compose.ui.unit.Dp, shape: androidx.compose.ui.graphics.Shape?, clip: kotlin.Boolean, ambientColor: androidx.compose.ui.graphics.Color, spotColor: androidx.compose.ui.graphics.Color, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.ui.draw.ShadowKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
                    $receiver: GET_VAR 'modifier: androidx.compose.ui.Modifier declared in com.example.components.JustButtonKt.JustButton' type=androidx.compose.ui.Modifier origin=null
                    elevation: CALL 'public final fun <get-dp> (): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
                      $receiver: CONST Int type=kotlin.Int value=0
                    shape: GET_VAR 'shape: androidx.compose.ui.graphics.Shape declared in com.example.components.JustButtonKt.JustButton' type=androidx.compose.ui.graphics.Shape origin=null
                    clip: CONST Boolean type=kotlin.Boolean value=false
                    ambientColor: COMPOSITE type=androidx.compose.ui.graphics.Color origin=DEFAULT_VALUE
                      CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.Color origin=null
                        <T>: kotlin.Long
                        <R>: androidx.compose.ui.graphics.Color
                        v: CONST Long type=kotlin.Long value=0
                    spotColor: COMPOSITE type=androidx.compose.ui.graphics.Color origin=DEFAULT_VALUE
                      CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.Color origin=null
                        <T>: kotlin.Long
                        <R>: androidx.compose.ui.graphics.Color
                        v: CONST Long type=kotlin.Long value=0
                    $mask0: CONST Int type=kotlin.Int value=24
                    $handler: CONST Null type=kotlin.Any? value=null
                  shape: GET_VAR 'shape: androidx.compose.ui.graphics.Shape declared in com.example.components.JustButtonKt.JustButton' type=androidx.compose.ui.graphics.Shape origin=null
                brush: CALL 'public final fun horizontalGradient-8A-3gB4$default ($this: androidx.compose.ui.graphics.Brush.Companion, colors: kotlin.collections.List<androidx.compose.ui.graphics.Color>, startX: kotlin.Float, endX: kotlin.Float, tileMode: androidx.compose.ui.graphics.TileMode, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.graphics.Brush declared in androidx.compose.ui.graphics.Brush.Companion' type=androidx.compose.ui.graphics.Brush origin=DEFAULT_DISPATCH_CALL
                  $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.graphics.Brush.Companion visibility:public [final,static] declared in androidx.compose.ui.graphics.Brush' type=androidx.compose.ui.graphics.Brush.Companion origin=null
                  colors: WHEN type=kotlin.collections.List<androidx.compose.ui.graphics.Color> origin=IF
                    BRANCH
                      if: GET_VAR 'enabled: kotlin.Boolean declared in com.example.components.JustButtonKt.JustButton' type=kotlin.Boolean origin=null
                      then: GET_VAR 'backgroundGradient: kotlin.collections.List<androidx.compose.ui.graphics.Color> declared in com.example.components.JustButtonKt.JustButton' type=kotlin.collections.List<androidx.compose.ui.graphics.Color> origin=null
                    BRANCH
                      if: CONST Boolean type=kotlin.Boolean value=true
                      then: GET_VAR 'disabledBackgroundGradient: kotlin.collections.List<androidx.compose.ui.graphics.Color> declared in com.example.components.JustButtonKt.JustButton' type=kotlin.collections.List<androidx.compose.ui.graphics.Color> origin=null
                  startX: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
                    CONST Float type=kotlin.Float value=0.0
                  endX: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
                    CONST Float type=kotlin.Float value=0.0
                  tileMode: COMPOSITE type=androidx.compose.ui.graphics.TileMode origin=DEFAULT_VALUE
                    CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.TileMode origin=null
                      <T>: kotlin.Int
                      <R>: androidx.compose.ui.graphics.TileMode
                      v: CONST Int type=kotlin.Int value=0
                  $mask0: CONST Int type=kotlin.Int value=14
                  $handler: CONST Null type=kotlin.Any? value=null
                shape: COMPOSITE type=androidx.compose.ui.graphics.Shape? origin=DEFAULT_VALUE
                  CONST Null type=androidx.compose.ui.graphics.Shape? value=null
                alpha: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
                  CONST Float type=kotlin.Float value=0.0
                $mask0: CONST Int type=kotlin.Int value=6
                $handler: CONST Null type=kotlin.Any? value=null
              color: CALL 'public final fun getTransparent-0d7_KjU (): androidx.compose.ui.graphics.Color declared in androidx.compose.ui.graphics.Color.Companion' type=androidx.compose.ui.graphics.Color origin=GET_PROPERTY
                $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.graphics.Color.Companion visibility:public [final,static] declared in androidx.compose.ui.graphics.Color' type=androidx.compose.ui.graphics.Color.Companion origin=null
              shape: GET_VAR 'shape: androidx.compose.ui.graphics.Shape declared in com.example.components.JustButtonKt.JustButton' type=androidx.compose.ui.graphics.Shape origin=null
            other: WHEN type=androidx.compose.ui.Modifier origin=IF
              BRANCH
                if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
                  $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                    arg0: GET_VAR 'border: androidx.compose.foundation.BorderStroke? declared in com.example.components.JustButtonKt.JustButton' type=androidx.compose.foundation.BorderStroke? origin=null
                    arg1: CONST Null type=kotlin.Nothing? value=null
                then: CALL 'public final fun border (border: androidx.compose.foundation.BorderStroke, shape: androidx.compose.ui.graphics.Shape): androidx.compose.ui.Modifier declared in androidx.compose.foundation.BorderKt' type=androidx.compose.ui.Modifier origin=null
                  $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
                  border: GET_VAR 'border: androidx.compose.foundation.BorderStroke? declared in com.example.components.JustButtonKt.JustButton' type=androidx.compose.foundation.BorderStroke? origin=null
                  shape: GET_VAR 'shape: androidx.compose.ui.graphics.Shape declared in com.example.components.JustButtonKt.JustButton' type=androidx.compose.ui.graphics.Shape origin=null
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
        VAR IR_TEMPORARY_VARIABLE name:tmp1_role type:androidx.compose.ui.semantics.Role [val]
          CALL 'public final fun getButton-o7Vup1c (): androidx.compose.ui.semantics.Role declared in androidx.compose.ui.semantics.Role.Companion' type=androidx.compose.ui.semantics.Role origin=GET_PROPERTY
            $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.semantics.Role.Companion visibility:public [final,static] declared in androidx.compose.ui.semantics.Role' type=androidx.compose.ui.semantics.Role.Companion origin=null
        CALL 'public final fun clickable-O2vRcR0$default (interactionSource: androidx.compose.foundation.interaction.MutableInteractionSource?, indication: androidx.compose.foundation.Indication?, enabled: kotlin.Boolean, onClickLabel: kotlin.String?, role: androidx.compose.ui.semantics.Role?, onClick: kotlin.Function0<kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.ClickableKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
          $receiver: GET_VAR 'val tmp0_$receiver: androidx.compose.ui.Modifier [val] declared in com.example.components.JustButtonKt.JustButton' type=androidx.compose.ui.Modifier origin=null
          interactionSource: GET_VAR 'interactionSource: androidx.compose.foundation.interaction.MutableInteractionSource declared in com.example.components.JustButtonKt.JustButton' type=androidx.compose.foundation.interaction.MutableInteractionSource origin=null
          indication: CONST Null type=kotlin.Nothing? value=null
          enabled: GET_VAR 'enabled: kotlin.Boolean declared in com.example.components.JustButtonKt.JustButton' type=kotlin.Boolean origin=null
          onClickLabel: COMPOSITE type=kotlin.String? origin=DEFAULT_VALUE
            CONST Null type=kotlin.String? value=null
          role: GET_VAR 'val tmp1_role: androidx.compose.ui.semantics.Role [val] declared in com.example.components.JustButtonKt.JustButton' type=androidx.compose.ui.semantics.Role origin=null
          onClick: GET_VAR 'onClick: kotlin.Function0<kotlin.Unit> declared in com.example.components.JustButtonKt.JustButton' type=kotlin.Function0<kotlin.Unit> origin=null
          $mask0: CONST Int type=kotlin.Int value=8
          $handler: CONST Null type=kotlin.Any? value=null
      contentAlignment: COMPOSITE type=androidx.compose.ui.Alignment? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.Alignment? value=null
      propagateMinConstraints: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
        CONST Boolean type=kotlin.Boolean value=false
      content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        FUNCTION_REFERENCE 'private final fun JustButton$lambda$2 ($interactionSource: androidx.compose.foundation.interaction.MutableInteractionSource, $contentPadding: androidx.compose.foundation.layout.PaddingValues, $content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.RowScope, kotlin.Unit>): kotlin.Unit declared in com.example.components.JustButtonKt' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
          $interactionSource: GET_VAR 'interactionSource: androidx.compose.foundation.interaction.MutableInteractionSource declared in com.example.components.JustButtonKt.JustButton' type=androidx.compose.foundation.interaction.MutableInteractionSource origin=null
          $contentPadding: GET_VAR 'contentPadding: androidx.compose.foundation.layout.PaddingValues declared in com.example.components.JustButtonKt.JustButton' type=androidx.compose.foundation.layout.PaddingValues origin=null
          $content: GET_VAR 'content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.RowScope, kotlin.Unit> declared in com.example.components.JustButtonKt.JustButton' type=@[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.RowScope, kotlin.Unit> origin=null
      $mask0: CONST Int type=kotlin.Int value=6
      $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:41)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:405)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:422)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:167)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateFile$lambda$18(JvmIrCodegenFactory.kt:398)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:68)
	at org.jetbrains.kotlin.config.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:215)
	at org.jetbrains.kotlin.config.phaser.NamedCompilerPhase.invoke(CompilerPhase.kt:111)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:51)
	... 43 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun Box$default (modifier: androidx.compose.ui.Modifier?, contentAlignment: androidx.compose.ui.Alignment?, propagateMinConstraints: kotlin.Boolean, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.BoxKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:128)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:594)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:520)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:525)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:237)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:124)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:45)
	... 52 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/foundation/layout/BoxKt;.Box$default(Landroidx/compose/ui/Modifier;Landroidx/compose/ui/Alignment;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:128)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:97)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:92)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:42)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:50)
	... 64 more


